<!--
~  Certain versions of software accessible here may contain branding from Hewlett-Packard Company (now HP Inc.) and Hewlett Packard Enterprise Company.
~  This software was acquired by Micro Focus on September 1, 2017, and is now offered by OpenText.
~  Any reference to the HP and Hewlett Packard Enterprise/HPE marks is historical in nature, and the HP and Hewlett Packard Enterprise/HPE marks are the property of their respective owners.
~
~ Copyright 2012-2023 Open Text
~
~ The only warranties for products and services of Open Text and
~ its affiliates and licensors (“Open Text”) are as may be set forth
~ in the express warranty statements accompanying such products and services.
~ Nothing herein should be construed as constituting an additional warranty.
~ Open Text shall not be liable for technical or editorial errors or
~ omissions contained herein. The information contained herein is subject
~ to change without notice.
~
~ Except as specifically indicated otherwise, this document contains
~ confidential information and a valid license is required for possession,
~ use or copying. If this work is provided to the U.S. Government,
~ consistent with FAR 12.211 and 12.212, Commercial Computer Software,
~ Computer Software Documentation, and Technical Data for Commercial Items are
~ licensed to the U.S. Government under vendor's standard commercial license.
  -->
<?jelly escape-by-default='true'?>
<j:jelly  xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:c="/lib/credentials" >
	<f:block>
	<style>
	.disabledLine {
		position:relative;
	}
	.disabledLine:before {
	width:100%;
	height:100%;
	background-color:#fff;
	opacity:0.9;
	content:'';
	position:absolute;
	
	}
	
	.myClass{
		border: 5px solid red;
	}


	/* Tooltip container */
    .tooltip {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
    }

    /* Tooltip text */
    .tooltip .tooltiptext {
        visibility: hidden;
        width: 350px;
        background-color: #555;
        color: #fff;
        padding: 5px;
        border-radius: 6px;

        /* Position the tooltip text */
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -60px;

        /* Fade in tooltip */
        opacity: 0;
        transition: opacity 1s;
    }

    /* Tooltip arrow */
    .tooltip .tooltiptext::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: #555 transparent transparent transparent;
    }

    /* Show the tooltip text when you mouse over the tooltip container */
    .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }
	</style>
	
		<script>


    function assignhostPath(){
        setTimeout(function(){
            var href = window.location.href;
            var splitter = href.split("/job");
            var baseurl = splitter[0];
            var p = document.getElementById('serverAndPort');
            if(p){
                p.value = baseurl;
            }
        },50)

    }



		function isAddRunToTrendReportEnabled(sender) {
			var x = sender.selectedIndex;
			var y = sender.options;
			var addRunToTrendReport = document.getElementById('trendReportTable');
			//alert(y[x].value);
			if (y[x].value === 'COLLATE_AND_ANALYZE'){
				addRunToTrendReport.classList.remove("disabledLine");
			}
			else{
				addRunToTrendReport.classList.add("disabledLine");
			}
						
		}
		
		function onPostRunActionLoad(){
			var postRunAction = document.getElementById('postRunAction');
			if(postRunAction != null){
			    isAddRunToTrendReportEnabled(postRunAction);
			}

		}

		function verifyURLAvailable(){

            var pcServerAndTenant = getLreServer(document.getElementsByName("pc.pcServerName")[0].value);
            var scheme = "http";
            if(document.getElementsByName("pc.HTTPSProtocol")[0].checked){
                scheme = "https"
            }
            if (pcServerAndTenant.length == 2 &amp;&amp; pcServerAndTenant[0]) {
                var popup = window.open(scheme + "://" + pcServerAndTenant[0] + "/loadtest/"  + pcServerAndTenant[1]);
                popup.opener = null;
            } else {
                alert("Server name is missing.");
            }
            return false;
            }

            function getLreServer(lreServer){
                var delimiterSlash = "/";
                var delimiterQuestionMark = "?";
                var useDelimiter = delimiterSlash;
                var strServerAndTenant = [lreServer, ""];
                var theLreServer = lreServer;
                if (lreServer != null &amp;&amp; !(lreServer.length === 0)) {
                    theLreServer = /* replace */ lreServer.toLowerCase().split("http://").join("");
                    theLreServer = /* replace */ theLreServer.split("https://").join("");
                    theLreServer = /* replace */ theLreServer.split("/lre").join("");
                    theLreServer = /* replace */ theLreServer.split("/site").join("");
                    theLreServer = /* replace */ theLreServer.split("/loadtest").join("");
                    theLreServer = /* replace */ theLreServer.split("/pcx").join("");
                    theLreServer = /* replace */ theLreServer.split("/adminx").join("");
                    theLreServer = /* replace */ theLreServer.split("/admin").join("");
                    theLreServer = /* replace */ theLreServer.split("/login").join("");
                }
                if (theLreServer != null &amp;&amp; !(theLreServer.length === 0)) {
                    if ( /* contains */(theLreServer.indexOf("/") != -1)) {
                        useDelimiter = delimiterSlash;
                    }
                    else if ( /* contains */(theLreServer.indexOf("?") != -1)) {
                        useDelimiter = delimiterQuestionMark;
                    }
                    var severTenantArray = theLreServer.split(useDelimiter);
                    if (severTenantArray.length &gt; 0) {
                        strServerAndTenant[0] = severTenantArray[0];
                        if (severTenantArray.length &gt; 1) {
                            if (useDelimiter === delimiterQuestionMark) {
                                strServerAndTenant[1] = delimiterQuestionMark + severTenantArray[1];
                            }
                            else {
                                strServerAndTenant[1] = severTenantArray[1];
                            }
                        }
                    }
                }
                return strServerAndTenant;
            }
		</script>
	</f:block>

	<tr>
		<td />
		<td colspan="2">
            <div class="help" style="display:block;">
                ${%ParametrizationMessage}
            </div>
		</td>
		<td />
	</tr>
	<f:entry title="Description" field="description">
		<f:textbox name="pc.description" value="${instance.pcTestRunModel.description}" />
	</f:entry>
	<f:entry title="LRE Server" field="pcServerName">
		<f:textbox name="pc.pcServerName" value="${instance.pcTestRunModel.pcServerName}" />
	</f:entry>
	<f:entry title="&#160;" >
        <f:checkbox title="Use HTTPS Protocol" field="HTTPSProtocol" name="pc.HTTPSProtocol" checked="${instance.pcTestRunModel.HTTPSProtocol}" />
    </f:entry>
    <f:entry title="&#160;" field="authenticateWithToken">
        <f:checkbox title="Use Token For Authentication" field="authenticateWithToken" name="pc.authenticateWithToken" checked="${instance.pcTestRunModel.authenticateWithToken}" />
    </f:entry>
    <f:entry name="pc.credentialsId" field="credentialsId" title="LRE Credentials">
        <c:select expressionAllowed="true" />
    </f:entry>
	<f:entry title="Domain" field="almDomain">
		<f:textbox name="pc.almDomain" value="${instance.pcTestRunModel.almDomain}" />
	</f:entry>

	<f:entry title="Project" field="almProject">
		<f:textbox name="pc.almProject" value="${instance.pcTestRunModel.almProject}" />
	</f:entry>
    <f:invisibleEntry title="" field="serverAndPort">
        <f:textbox id="serverAndPort" name="pc.serverAndPort" value="" onchange="assignhostPath()" />
    </f:invisibleEntry>


    <script>assignhostPath();</script>

    <td class="setting-leftspace">&#160;</td>
    <td>Run Test</td>
    <td colspan="2">
        <table style="width:100%" id="testTable">
        <f:radioBlock field="testToRun" name="pc.testToRun" value="EXISTING_TEST" checked="${instance.pcTestRunModel.testToRun =='EXISTING_TEST' || instance.pcTestRunModel.testToRun== null}" title="Existing test" inline="true" >
            <f:entry title="Test ID" field="testId" >
                <f:textbox  name="pc.testId" style="width:100%" value="${instance.pcTestRunModel.testId}" inline="true" />
            </f:entry>
        </f:radioBlock>
        <f:radioBlock field="testToRun" name="pc.testToRun" value="CREATE_TEST" checked="${instance.pcTestRunModel.testToRun=='CREATE_TEST'}" title="Create Test From YAML" inline="true" >
            <f:entry title="Test To Create" field="testContentToCreate" >
                <f:textarea  name="pc.testContentToCreate" rows="8" style="width:100%" value="${instance.pcTestRunModel.testContentToCreate}" inline="true" />
            </f:entry>
        </f:radioBlock>
        </table>
    </td>

	<f:entry title="&#160;&#160;&#160;&#160;&#160;" field="">
		<a id="pcServerURL" href="#" onclick="verifyURLAvailable();return false;">Browse to find the Test ID</a>
	</f:entry>

	<td class="setting-leftspace">&#160;</td>
    <td>Test Instance ID</td>
    <td colspan="2">
        <table style="width:100%">
        <f:radioBlock field="autoTestInstanceID" name="pc.autoTestInstanceID" value="AUTO" checked="${instance.pcTestRunModel.autoTestInstanceID=='AUTO' || instance.pcTestRunModel.autoTestInstanceID== null}" title="Automatically select existing or create new if none exists (Performance Center 12.55 or later)" inline="true">
       </f:radioBlock>
         <f:radioBlock  field="autoTestInstanceID" name="pc.autoTestInstanceID" value="MANUAL"  checked="${instance.pcTestRunModel.autoTestInstanceID=='MANUAL'}" title="Manual selection" inline="true">
             <f:nested>
                <f:entry title="" field="testInstanceId">
                    <f:textbox name="pc.testInstanceId" value="${instance.pcTestRunModel.testInstanceId}" />
                </f:entry>
             </f:nested>
         </f:radioBlock>
        </table>
    </td>
    <f:block>
        <br />
    </f:block>
    <f:optionalBlock title="Search timeslot" field="searchTimeslot" name="pc.searchTimeslot" checked="${instance.pcTestRunModel.searchTimeslot}" inline="true" />
    <f:block>
        <br />
    </f:block>
    <f:entry title="Local Proxy" field="proxyOutURL">
        <f:textbox name="pc.proxyOutURL" value="${instance.pcTestRunModel.proxyOutURL}" />
    </f:entry>
    <f:entry name="pc.credentialsProxyId" field="credentialsProxyId" title="Proxy Credentials">
        <c:select expressionAllowed="true" />
    </f:entry>

	<f:block>
		<br />
	</f:block>

	<f:entry title="Post Run Action" field="postRunAction">
		<select id="postRunAction" name="pc.postRunAction" onchange="isAddRunToTrendReportEnabled(this)">
			<j:forEach var="action" items="${descriptor.postRunActions}">
				<f:option selected="${action == instance.pcTestRunModel.postRunAction}"
					value="${action}">
					${action.value}
                        </f:option>
			</j:forEach>
		</select>
	</f:entry>
	<f:block>
		<br />
	</f:block>
	    <td class="setting-leftspace">&#160;</td>
        <td>Trending</td>
        <td colspan="2">
            <table style="width:100%" id="trendReportTable">
            <f:radioBlock field="addRunToTrendReport" name="addRunToTrendReport" value="NO_TREND" checked="${instance.pcTestRunModel.addRunToTrendReport=='NO_TREND'}" title="Do Not Trend" inline="true">
            </f:radioBlock>
            <f:radioBlock field="addRunToTrendReport" name="addRunToTrendReport" value="ASSOCIATED" checked="${instance.pcTestRunModel.addRunToTrendReport=='ASSOCIATED'}" title="Use trend report associated with the test (Performance Center 12.55 or later)" inline="true">
            </f:radioBlock>
            <f:radioBlock field="addRunToTrendReport" name="addRunToTrendReport" value="USE_ID" checked="${instance.pcTestRunModel.addRunToTrendReport=='USE_ID'}" title="Add run to trend report with ID" inline="true">
                <f:entry title="Trend report ID:" field="addRunToTrendReport">
			        <f:textbox  name="trendReportId" style="width:40px;height:24px;text-align:center;margin:0px" value="${instance.pcTestRunModel.trendReportId}" inline="true"/>
                </f:entry>
            </f:radioBlock>
            </table>
        </td>
		<script>onPostRunActionLoad();</script>
	<f:block>
		<j:set var="h_id" value="${h.generateId()}" />
		<j:set var="m_id" value="${h.generateId()}" />
		<br />
		<table cellpadding="0" cellspacing="0" border="0">
			<tr>
				<td rowspan="2"
					style="vertical-align:middle;padding-left:1em;padding-right:3em">
					<span>Timeslot Duration</span>
				</td>
				<td rowspan="2" style="vertical-align:middle">
					<span>Hours&#160;</span>
				</td>

				<td rowspan="2" style="vertical-align:middle">
					<f:textbox name="timeslotDurationHours" id="${h_id}"
						value="${instance.pcTestRunModel.timeslotDurationHours}" default="0"
						style="width:40px;height:24px;text-align:center"
						onchange="if (!value.Startwith('&#x24;&#x24;')) {
										var hours = parseInt(value);
										value = (isNaN(hours) || (hours &lt; 0)) ? 0 : ((hours &gt; 480) ? 480 : hours);
										var minutes = document.getElementById('${m_id}');
										if (value == 0 &amp;&amp; minutes.value &lt; 30) minutes.value = 30;
										else if (value == 480) minutes.value = 0; }" />
				</td>
				<td>
					<input type="button" value=" /\ "
						style="font-size:4px;margin:0;padding:0;width:20px;height:15px;vertical-align:top"
						onclick="var hours = document.getElementById('${h_id}');
										var v = parseInt(hours.value);
										v = (isNaN(v) || v &lt; 0) ? 0 : v + 1;
										hours.value = (v &gt; 480) ? 480 : v;" />
				</td>
				<td rowspan="2" style="vertical-align:middle">
					<span>&#160;&#160;Minutes&#160;</span>
				</td>

				<td rowspan="2" style="vertical-align:middle">
					<f:textbox name="timeslotDurationMinutes" id="${m_id}"
						value="${instance.pcTestRunModel.timeslotDurationMinutes}" default="30"
						style="width:40px;height:24px;text-align:center"
						onchange="if (!value.Startwith('&#x24;&#x24;')) {
										var v = parseInt(value);
										v = isNaN(v) || (v &lt; 0) || (v &gt; 59) ? 0 : v ;
										value = (v &lt; 30 &amp;&amp; document.getElementById('${h_id}').value == 0) ? 30 : v; }" />
				</td>
				<td>
					<input type="button" value=" /\ "
						style="font-size:4px;margin:0;padding:0;width:20px;height:15px;vertical-align:top"
						onclick="var minutes = document.getElementById('${m_id}');
										var v = parseInt(minutes.value);
										v = (v + 15) % 60; minutes.value = v - v % 15;
										var hours = document.getElementById('${h_id}');
										if (hours.value == 0 &amp;&amp; minutes.value &lt; 30)
											minutes.value = 30;" />
				</td>
				<td rowspan="2" style="vertical-align:middle;padding-left:2em">
					<span>(Minimum: 30 minutes)</span>
				</td>
			</tr>
			<tr>
				<td>
					<input type="button" value=" \/ "
						style="font-size:4px;margin:0;padding:0;width:20px;height:14px;vertical-align:middle"
						onclick="var hours = document.getElementById('${h_id}');
										var v = parseInt(hours.value);
										v = isNaN(v) || v &lt; 1 ? 1 : hours.value = v - 1;
										var minutes = document.getElementById('${m_id}');
										if (hours.value == 0 &amp;&amp; minutes.value &lt; 30)
											minutes.value = 30;" />
				</td>
				<td>
					<input type="button" value=" \/ "
						style="font-size:4px;margin:0;padding:0;width:20px;height:14px;vertical-align:middle"
						onclick="var minutes = document.getElementById('${m_id}');
										var v = parseInt(minutes.value);
										v = (v + 45) % 60;
										if (v % 15 != 0)
											v = v + 15 - v % 15;
										if (document.getElementById('${h_id}').value == 0 &amp;&amp; v &lt; 30)
											v = 45;
										minutes.value= v" />
				</td>
			</tr>
		</table>
		<br />
	</f:block>
    <f:block>
        <br />
    </f:block>
	<f:optionalBlock title="Use VUDs" field="vudsMode" name="pc.vudsMode" checked="${instance.pcTestRunModel.vudsMode}" inline="true" />
	<f:block>
		<br />
	</f:block>
	<f:optionalBlock title="Set step status according to SLA"
		field="statusBySLA" name="pc.statusBySLA" checked="${instance.statusBySLA}"
		inline="true" />

	<f:block>
		<br />
	</f:block>
	<td class="setting-leftspace">&#160;</td>
    <td>On Timeslot creation failure</td>
    <td colspan="2">
        <table style="width:100%" id="retryTable">
        <f:radioBlock field="retry" name="retry" value="NO_RETRY" checked="${instance.pcTestRunModel.retry =='NO_RETRY'}" title="Do Not Repeat" inline="true" />
        <f:radioBlock field="retry" name="retry" value="RETRY" checked="${instance.pcTestRunModel.retry=='RETRY'}" title="Repeat with the following parameters" inline="true">
            <f:entry title="Delay between attempts (in minutes):" field="retry">
                <f:textbox  name="retryDelay" style="width:40px;height:24px;text-align:center;margin:0px" value="${instance.pcTestRunModel.retryDelay}" inline="true"/>
            </f:entry>
            <f:entry title="Number of attempts:" field="retry">
                <f:textbox  name="retryOccurrences" style="width:40px;height:24px;text-align:center;margin:0px" value="${instance.pcTestRunModel.retryOccurrences}" inline="true"/>
            </f:entry>
        </f:radioBlock>
        </table>
    </td>
	<f:block>
		<br />
	</f:block>
    <td>Trend Report Wait Time</td>
  	<f:entry title="Amount of time, in seconds, to wait before downloading the trend report" field="trendReportWaitTime">
  		<f:textbox name="pc.trendReportWaitTime" style="width:40px;height:24px;text-align:center;margin:0px" value="${instance.pcTestRunModel.trendReportWaitTime}" default="0" />
  	</f:entry>
</j:jelly>
